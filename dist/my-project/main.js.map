{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/post-form/post-form.component.ts","./src/app/home/post-form/post-form.component.html","./src/app/home/post-modal/post-modal.component.ts","./src/app/home/post-modal/post-modal.component.html","./src/app/home/post/post.component.ts","./src/app/home/post/post.component.html","./src/app/post/coffee-post.component.ts","./src/app/post/coffee-post.component.html","./src/app/posts/coffee-posts.component.ts","./src/app/posts/coffee-posts.component.html","./src/app/services/auth.service.ts","./src/app/services/modal-service.service.ts","./src/app/services/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>About us</p>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { CoffeePostsComponent } from './posts/coffee-posts.component';\r\nimport { CoffeePostComponent } from './post/coffee-post.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'about',\r\n    component: AboutComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'posts', component: CoffeePostsComponent },\r\n  { path: 'posts/:id', component: CoffeePostComponent },\r\n  {\r\n    path: 'contacts',\r\n    component: ContactsComponent,\r\n  },\r\n  { path: 'error', component: ErrorPageComponent },\r\n  { path: '**', redirectTo: '/error' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(public auth: AuthService, private router: Router) {}\n\n  logOut() {\n    this.router.navigate(['/']);\n  }\n}\n","<nav class=\"navbar\">\n  <h1>\n    <a routerLink=\"/\">Small App</a>\n  </h1>\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n      <a [routerLink]=\"['/']\">Home</a>\n    </li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/about']\">About</a></li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/posts']\">Posts</a></li>\n    <li routerLinkActive=\"active\">\n      <a [routerLink]=\"['/contacts']\">Contacts</a>\n    </li>\n\n    <li><button class=\"btn\" (click)=\"auth.login()\">Login</button></li>\n    <li>\n      <button class=\"btn\" (click)=\"auth.logout()\">\n        Logout\n      </button>\n    </li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HomeComponent } from './home/home.component';\nimport { PostComponent } from './home/post/post.component';\nimport { PostFormComponent } from './home/post-form/post-form.component';\nimport { PostModalComponent } from './home/post-modal/post-modal.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { CoffeePostsComponent } from './posts/coffee-posts.component';\nimport { CoffeePostComponent } from './post/coffee-post.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PostComponent,\n    PostFormComponent,\n    PostModalComponent,\n    AboutComponent,\n    ContactsComponent,\n    CoffeePostsComponent,\n    CoffeePostComponent,\n    ErrorPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.authService.isAuthenticated().then((isAuth) => {\r\n      if (isAuth) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/'], {\r\n          queryParams: {\r\n            auth: false,\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Contacts</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Page not found 404</h1>\n\n<a routerLink=\"/\">Home Page</a>\n","import { Component, OnInit } from '@angular/core';\nimport { ModalServiceService } from '../services/modal-service.service';\n\nexport interface Feedback {\n  name: string;\n  email: string;\n  feedback: string;\n  rate: string;\n  id?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  feedbacks: Feedback[] = [\n    {\n      name: 'React',\n      email: 'react@gmail.com',\n      feedback: 'first framework',\n      rate: '5',\n      id: '1',\n    },\n    {\n      name: 'Angular',\n      email: 'angular@gmail.com',\n      feedback: 'second framework',\n      rate: '5',\n      id: '2',\n    },\n  ];\n\n  // isModalOpen = false;\n  objForEditing = null;\n\n  constructor(public appModaService: ModalServiceService) {}\n\n  ngOnInit(): void {}\n\n  addFeedback(userFeedback: Feedback) {\n    this.feedbacks.unshift(userFeedback);\n  }\n\n  deleteFeedback(feedbackId: string) {\n    this.feedbacks = this.feedbacks.filter((el) => el.id !== feedbackId);\n  }\n  editFeedback(feedback: Feedback) {\n    this.objForEditing = feedback;\n    // this.isModalOpen = true;\n  }\n\n  saveEditFeedback(editedFeedback: Feedback) {\n    this.objForEditing = null;\n    // this.isModalOpen = false;\n    this.feedbacks = this.feedbacks.map((el) =>\n      el.id === editedFeedback.id ? editedFeedback : el\n    );\n  }\n\n  // onCloseModal() {\n  //   this.isModalOpen;\n  // }\n}\n","<div>\n  <app-post-form (onAdd)=\"addFeedback($event)\"></app-post-form>\n  <app-post\n    *ngFor=\"let f of feedbacks\"\n    [feedback]=\"f\"\n    (onDelete)=\"deleteFeedback($event)\"\n    (onEdit)=\"editFeedback($event)\"\n  ></app-post>\n  <app-post-modal\n    [editId]=\"objForEditing\"\n    *ngIf=\"appModaService.isModalOpen\"\n    (onEditSave)=\"saveEditFeedback($event)\"\n  ></app-post-modal>\n</div>\n","import shortid from 'shortid';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Feedback } from '../home.component';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.scss'],\n})\nexport class PostFormComponent implements OnInit {\n  form: FormGroup;\n\n  @Output() onAdd: EventEmitter<Feedback> = new EventEmitter<Feedback>();\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(8),\n      ]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      feedback: new FormControl('', Validators.required),\n      rate: new FormControl(''),\n    });\n  }\n\n  onAddFeedback() {\n    if (this.form.valid) {\n      const formData = { ...this.form.value, id: shortid.generate() };\n\n      this.onAdd.emit(formData);\n\n      console.log(formData);\n      this.form.reset();\n    }\n  }\n}\n","<form class=\"card\" action=\"\" [formGroup]=\"form\" (ngSubmit)=\"onAddFeedback()\">\n  <h2>Leave your feedback</h2>\n\n  <div class=\"form-control\">\n    <label>Name</label>\n    <input formControlName=\"name\" type=\"text\" placeholder=\"Your Name\" />\n    <div\n      *ngIf=\"form.get('name').invalid && form.get('name').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('name').errors.required\">\n        Name field cannot be empty\n      </small>\n\n      <small *ngIf=\"form.get('name').errors.minlength\">\n        Name length must be more than\n        {{ form.get(\"name\").errors.minlength.requiredLength }} characters\n        <br />\n        Now you have\n        {{ form.get(\"name\").errors.minlength.actualLength }} character(s)\n      </small>\n\n      <small *ngIf=\"form.get('name').errors.maxlength\">\n        Name length must be less than\n        {{ form.get(\"name\").errors.maxlength.requiredLength }} characters\n        <br />\n        Now you have\n        {{ form.get(\"name\").errors.maxlength.actualLength }} character(s)\n      </small>\n    </div>\n  </div>\n\n  <div class=\"form-control\">\n    <label>Email</label>\n    <input formControlName=\"email\" type=\"text\" placeholder=\"Your Email\" />\n    <div\n      *ngIf=\"form.get('email').invalid && form.get('email').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('email').errors.required\">\n        Email field cannot be empty\n      </small>\n      <small *ngIf=\"form.get('email').errors.email\">\n        Please enter a valid email\n      </small>\n    </div>\n  </div>\n\n  <div class=\"form-control\">\n    <label>Your Feedback</label>\n    <textarea\n      formControlName=\"feedback\"\n      style=\"resize: none;\"\n      type=\"text\"\n      rows=\"5\"\n      placeholder=\"Leave your feedback\"\n    ></textarea>\n    <div\n      *ngIf=\"form.get('feedback').invalid && form.get('feedback').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('feedback').errors.required\">\n        Feedback field cannot be empty\n      </small>\n    </div>\n  </div>\n\n  <div class=\"form-control\">\n    <label>Rating</label>\n\n    <select formControlName=\"rate\">\n      <option value=\"\" selected disabled hidden>Rate us</option>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n    </select>\n  </div>\n\n  <button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn\">\n    Submit\n  </button>\n</form>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  Input,\n  HostListener,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ModalServiceService } from '../../services/modal-service.service';\nimport { Feedback } from '../home.component';\n\n@Component({\n  selector: 'app-post-modal',\n  templateUrl: './post-modal.component.html',\n  styleUrls: ['./post-modal.component.scss'],\n})\nexport class PostModalComponent implements OnInit {\n  @Input() editId: Feedback;\n  @Output() onEditSave: EventEmitter<Feedback> = new EventEmitter<Feedback>();\n\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.code !== `Escape`) return;\n\n    this.appModalService.onCloseModal();\n  }\n\n  form: FormGroup;\n\n  constructor(public appModalService: ModalServiceService) {}\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl(this.editId.name, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(8),\n      ]),\n      email: new FormControl(this.editId.email, [\n        Validators.required,\n        Validators.email,\n      ]),\n      feedback: new FormControl(this.editId.feedback, Validators.required),\n      rate: new FormControl(this.editId.rate),\n    });\n  }\n\n  onSaveEditFeedback() {\n    if (this.form.valid) {\n      const formData = { ...this.form.value, id: this.editId.id };\n\n      this.onEditSave.emit(formData);\n\n      console.log(formData);\n      this.form.reset();\n    }\n  }\n}\n","<div class=\"backdrop\">\n  <div class=\"modal\">\n    <button class=\"btnModal\" (click)=\"appModalService.onCloseModal()\">\n      &#10006;\n    </button>\n\n    <form\n      class=\"card\"\n      action=\"\"\n      [formGroup]=\"form\"\n      (ngSubmit)=\"onSaveEditFeedback()\"\n      (ngSubmit)=\"appModalService.onCloseModal()\"\n    >\n      <h2>Change your feedback</h2>\n\n      <div class=\"form-control\">\n        <label>Name</label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          placeholder=\"Change Your Name\"\n        />\n        <div\n          *ngIf=\"form.get('name').invalid && form.get('name').touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"form.get('name').errors.required\">\n            Name field cannot be empty\n          </small>\n\n          <small *ngIf=\"form.get('name').errors.minlength\">\n            Name length must be more than\n            {{ form.get(\"name\").errors.minlength.requiredLength }} characters\n            <br />\n            Now you have\n            {{ form.get(\"name\").errors.minlength.actualLength }} character(s)\n          </small>\n\n          <small *ngIf=\"form.get('name').errors.maxlength\">\n            Name length must be less than\n            {{ form.get(\"name\").errors.maxlength.requiredLength }} characters\n            <br />\n            Now you have\n            {{ form.get(\"name\").errors.maxlength.actualLength }} character(s)\n          </small>\n        </div>\n      </div>\n\n      <div class=\"form-control\">\n        <label>Email</label>\n        <input\n          formControlName=\"email\"\n          type=\"text\"\n          placeholder=\"Change Your Email\"\n        />\n        <div\n          *ngIf=\"form.get('email').invalid && form.get('email').touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"form.get('email').errors.required\">\n            Email field cannot be empty\n          </small>\n          <small *ngIf=\"form.get('email').errors.email\">\n            Please enter a valid email\n          </small>\n        </div>\n      </div>\n\n      <div class=\"form-control\">\n        <label>Your Feedback</label>\n        <textarea\n          formControlName=\"feedback\"\n          style=\"resize: none;\"\n          type=\"text\"\n          rows=\"5\"\n          placeholder=\"Change your feedback\"\n        ></textarea>\n        <div\n          *ngIf=\"form.get('feedback').invalid && form.get('feedback').touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"form.get('feedback').errors.required\">\n            Feedback field cannot be empty\n          </small>\n        </div>\n      </div>\n\n      <div class=\"form-control\">\n        <label>Rating</label>\n\n        <select formControlName=\"rate\">\n          <option value=\"\" selected disabled hidden>Rate us</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n      </div>\n\n      <button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn\">\n        Submit\n      </button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Feedback } from '../home.component';\nimport { ModalServiceService } from '../../services/modal-service.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n  @Input() feedback: Feedback;\n  @Output() onDelete: EventEmitter<string> = new EventEmitter<string>();\n  @Output() onEdit: EventEmitter<Feedback> = new EventEmitter<Feedback>();\n\n  constructor(public appModalService: ModalServiceService) {}\n\n  ngOnInit(): void {}\n\n  onDeleteFeedback() {\n    this.onDelete.emit(this.feedback.id);\n  }\n\n  onEditFeedback() {\n    this.onEdit.emit(this.feedback);\n  }\n}\n","<div class=\"card\">\n  <h4>{{ feedback.name }}</h4>\n  <p>{{ feedback.email }}</p>\n  <p>{{ feedback.feedback }}</p>\n  <p>{{ feedback.rate }}</p>\n  <button type=\"button\" (click)=\"onDeleteFeedback()\">Delete</button>\n  <button\n    type=\"button\"\n    (click)=\"onEditFeedback()\"\n    (click)=\"appModalService.onOpenModal()\"\n  >\n    Edit\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { PostsService, Post } from '../services/posts.service';\r\n\r\n@Component({\r\n  selector: 'app-coffee-post',\r\n  templateUrl: './coffee-post.component.html',\r\n  styleUrls: ['./coffee-post.component.scss'],\r\n})\r\nexport class CoffeePostComponent implements OnInit {\r\n  post: Post;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private postsService: PostsService // private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.post = this.postsService.getById(+params.id);\r\n    });\r\n  }\r\n\r\n  loadPost() {\r\n    this.router.navigate(['/posts', 44]);\r\n  }\r\n}\r\n","<div>\r\n  <button\r\n    class=\"btn\"\r\n    [routerLink]=\"['/posts']\"\r\n    routerLinkActive=\"router-link-active\"\r\n  >\r\n    Back\r\n  </button>\r\n\r\n  <h1>{{ post.title }}</h1>\r\n  <p>{{ post.text }}</p>\r\n\r\n  <button class=\"btn btn-danger\" (click)=\"loadPost()\">Load 4 post</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { PostsService } from '../services/posts.service';\r\n\r\n@Component({\r\n  selector: 'app-coffee-posts',\r\n  templateUrl: './coffee-posts.component.html',\r\n  styleUrls: ['./coffee-posts.component.scss'],\r\n})\r\nexport class CoffeePostsComponent {\r\n  constructor(public postsService: PostsService) {}\r\n}\r\n","<div class=\"card\" *ngFor=\"let post of postsService.posts\">\r\n  <h4>\r\n    <a [routerLink]=\"['/posts', post.id]\" routerLinkActive=\"router-link-active\">\r\n      {{ post.title }}\r\n    </a>\r\n  </h4>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private isAuth = false;\n\n  constructor(private router: Router) {}\n\n  login() {\n    this.isAuth = true;\n  }\n\n  logout() {\n    this.isAuth = false;\n    this.router.navigate(['/']);\n  }\n\n  isAuthenticated(): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(this.isAuth);\n      }, 0);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalServiceService {\n  isModalOpen = false;\n\n  onOpenModal() {\n    this.isModalOpen = true;\n  }\n\n  onCloseModal() {\n    this.isModalOpen = false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Post {\n  title: string;\n  text: string;\n  id: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  posts: Post[] = [\n    {\n      title: 'Americano',\n      text:\n        'Americano is an espresso coffee additionally diluted with water. The recipe and name of the drink was received as a disparaging name for \"not real\" espresso, coined by Italians to emphasize the bad taste of Americans in the field of coffee, who did not like the original espresso because of its strength.',\n      id: 11,\n    },\n    {\n      title: 'Cappucino',\n      text:\n        'Cappuccino is an Italian espresso-based coffee drink. The classic version includes a double portion of black coffee, hot milk and thick milk foam, but some baristas use cream instead of the last two ingredients, they also add cinnamon, chocolate chips, and orange peel to the drink.',\n      id: 22,\n    },\n    {\n      title: 'Expresso',\n      text:\n        'Эспрессо – чёрный кофе, приготовленный в кофемашине или специальной кофеварке, где сквозь спрессованные молотые зёрна пропускают горячую воду под давлением 9 бар. Готовый напиток должен иметь плотную пенку (бариста называют её крема́) однородного золотисто-орехового цвета, толщиной не менее 2 мм. Во вкусе эспрессо гармонично сочетаются сладость, горечь и лёгкая кислинка. Оттенки вкуса зависят от сортов кофейных зёрен, входящих в состав смеси, степени обжарки и навыков баристы. Родина напитка – Италия. Эспрессо очень быстро готовят и столь же быстро выпивают. У него есть несколько вариантов, он служит основой для многих других кофейных напитков.',\n      id: 33,\n    },\n    {\n      title: 'Latte',\n      text:\n        'Latte is a fairly simple coffee drink with milk. Italy is considered to be his homeland, where his name is caffellatte, which is just “milk coffee”. Just like in our kitchen. Italians drink it in the morning at home.',\n      id: 44,\n    },\n  ];\n\n  getById(id: number) {\n    return this.posts.find((p) => p.id === id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}